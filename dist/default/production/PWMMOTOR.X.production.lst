

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Jun 14 14:45:01 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166                           
   167                           	psect	nvCOMMON
   168     0072                     __pnvCOMMON:
   169     0072                     _button:
   170     0072                     	ds	1
   171     0008                     _PORTD	set	8
   172     0007                     _PORTC	set	7
   173     0017                     _CCP1CON	set	23
   174     0015                     _CCPR1L	set	21
   175     0012                     _T2CON	set	18
   176     0088                     _TRISD	set	136
   177     0087                     _TRISC	set	135
   178     0092                     _PR2	set	146
   179                           
   180                           	psect	cinit
   181     07FC                     start_initialization:	
   182                           ; #config settings
   183                           
   184     07FC                     __initialization:
   185     07FC                     end_of_initialization:	
   186                           ;End of C runtime variable initialization code
   187                           
   188     07FC                     __end_of__initialization:
   189     07FC  0183               	clrf	3
   190     07FD  120A  118A  2FB7   	ljmp	_main	;jump to C main() function
   191                           
   192                           	psect	cstackCOMMON
   193     0070                     __pcstackCOMMON:
   194     0070                     ?_DCmotor:
   195     0070                     ?_initPIC:	
   196                           ; 1 bytes @ 0x0
   197                           
   198     0070                     ??_initPIC:	
   199                           ; 1 bytes @ 0x0
   200                           
   201     0070                     ?_main:	
   202                           ; 1 bytes @ 0x0
   203                           
   204     0070                     DCmotor@speed:	
   205                           ; 1 bytes @ 0x0
   206                           
   207                           
   208                           ; 2 bytes @ 0x0
   209     0070                     	ds	2
   210     0072                     ??_DCmotor:
   211     0072                     ??_main:	
   212                           ; 1 bytes @ 0x2
   213                           
   214                           
   215                           	psect	maintext
   216     07B7                     __pmaintext:	
   217                           ; 1 bytes @ 0x2
   218 ;;
   219 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   220 ;;
   221 ;; *************** function _main *****************
   222 ;; Defined at:
   223 ;;		line 67 in file "MOTOR.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, status,2, status,0, pclath, cstack
   232 ;; Tracked objects:
   233 ;;		On entry : B00/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   237 ;;      Params:         0       0       0       0       0
   238 ;;      Locals:         0       0       0       0       0
   239 ;;      Temps:          0       0       0       0       0
   240 ;;      Totals:         0       0       0       0       0
   241 ;;Total ram usage:        0 bytes
   242 ;; Hardware stack levels required when called: 1
   243 ;; This function calls:
   244 ;;		_DCmotor
   245 ;;		_initPIC
   246 ;; This function is called by:
   247 ;;		Startup code after reset
   248 ;; This function uses a non-reentrant model
   249 ;;
   250                           
   251     07B7                     _main:	
   252                           ;psect for function _main
   253                           
   254     07B7                     l642:	
   255                           ;incstack = 0
   256                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   257                           
   258                           
   259                           ;MOTOR.c: 68:     initPIC();
   260     07B7  120A  118A  2769  120A  118A  	fcall	_initPIC
   261     07BC                     l644:
   262                           
   263                           ;MOTOR.c: 71:         button = PORTD;
   264     07BC  1283               	bcf	3,5	;RP0=0, select bank0
   265     07BD  1303               	bcf	3,6	;RP1=0, select bank0
   266     07BE  0808               	movf	8,w	;volatile
   267     07BF  00F2               	movwf	_button
   268     07C0                     l646:
   269                           
   270                           ;MOTOR.c: 73:         if (button == 0x20) {
   271     07C0  3020               	movlw	32
   272     07C1  0672               	xorwf	_button,w
   273     07C2  1D03               	btfss	3,2
   274     07C3  2FC5               	goto	u101
   275     07C4  2FC6               	goto	u100
   276     07C5                     u101:
   277     07C5  2FD0               	goto	l650
   278     07C6                     u100:
   279     07C6                     l648:
   280                           
   281                           ;MOTOR.c: 74:             DCmotor(1);
   282     07C6  3001               	movlw	1
   283     07C7  00F0               	movwf	DCmotor@speed
   284     07C8  3000               	movlw	0
   285     07C9  00F1               	movwf	DCmotor@speed+1
   286     07CA  120A  118A  2777  120A  118A  	fcall	_DCmotor
   287                           
   288                           ;MOTOR.c: 75:         }
   289     07CF  2FBC               	goto	l644
   290     07D0                     l650:
   291     07D0  3040               	movlw	64
   292     07D1  0672               	xorwf	_button,w
   293     07D2  1D03               	btfss	3,2
   294     07D3  2FD5               	goto	u111
   295     07D4  2FD6               	goto	u110
   296     07D5                     u111:
   297     07D5  2FE0               	goto	l654
   298     07D6                     u110:
   299     07D6                     l652:
   300                           
   301                           ;MOTOR.c: 77:             DCmotor(2);
   302     07D6  3002               	movlw	2
   303     07D7  00F0               	movwf	DCmotor@speed
   304     07D8  3000               	movlw	0
   305     07D9  00F1               	movwf	DCmotor@speed+1
   306     07DA  120A  118A  2777  120A  118A  	fcall	_DCmotor
   307                           
   308                           ;MOTOR.c: 78:         }
   309     07DF  2FBC               	goto	l644
   310     07E0                     l654:
   311     07E0  3080               	movlw	128
   312     07E1  0672               	xorwf	_button,w
   313     07E2  1D03               	btfss	3,2
   314     07E3  2FE5               	goto	u121
   315     07E4  2FE6               	goto	u120
   316     07E5                     u121:
   317     07E5  2FF0               	goto	l658
   318     07E6                     u120:
   319     07E6                     l656:
   320                           
   321                           ;MOTOR.c: 80:             DCmotor(3);
   322     07E6  3003               	movlw	3
   323     07E7  00F0               	movwf	DCmotor@speed
   324     07E8  3000               	movlw	0
   325     07E9  00F1               	movwf	DCmotor@speed+1
   326     07EA  120A  118A  2777  120A  118A  	fcall	_DCmotor
   327                           
   328                           ;MOTOR.c: 81:         }
   329     07EF  2FBC               	goto	l644
   330     07F0                     l658:
   331                           
   332                           ;MOTOR.c: 83:             DCmotor(0);
   333     07F0  3000               	movlw	0
   334     07F1  00F0               	movwf	DCmotor@speed
   335     07F2  00F1               	movwf	DCmotor@speed+1
   336     07F3  120A  118A  2777  120A  118A  	fcall	_DCmotor
   337     07F8  2FBC               	goto	l644
   338     07F9  120A  118A  2800   	ljmp	start
   339     07FC                     __end_of_main:
   340                           
   341                           	psect	text1
   342     0769                     __ptext1:	
   343 ;; *************** function _initPIC *****************
   344 ;; Defined at:
   345 ;;		line 59 in file "MOTOR.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg, status,2
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   359 ;;      Params:         0       0       0       0       0
   360 ;;      Locals:         0       0       0       0       0
   361 ;;      Temps:          0       0       0       0       0
   362 ;;      Totals:         0       0       0       0       0
   363 ;;Total ram usage:        0 bytes
   364 ;; Hardware stack levels used: 1
   365 ;; This function calls:
   366 ;;		Nothing
   367 ;; This function is called by:
   368 ;;		_main
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372     0769                     _initPIC:	
   373                           ;psect for function _initPIC
   374                           
   375     0769                     l602:	
   376                           ;incstack = 0
   377                           ; Regs used in _initPIC: [wreg+status,2]
   378                           	;# 
   379     0000                     nosup@@$_$_CONFIG	set	0	;# 
   380     0769                     l604:
   381                           
   382                           ;MOTOR.c: 61:     TRISC = 0x00;
   383     0769  1683               	bsf	3,5	;RP0=1, select bank1
   384     076A  1303               	bcf	3,6	;RP1=0, select bank1
   385     076B  0187               	clrf	7	;volatile
   386                           
   387                           ;MOTOR.c: 62:     PORTC = 0;
   388     076C  1283               	bcf	3,5	;RP0=0, select bank0
   389     076D  1303               	bcf	3,6	;RP1=0, select bank0
   390     076E  0187               	clrf	7	;volatile
   391     076F                     l606:
   392                           
   393                           ;MOTOR.c: 63:     TRISD = 0xFF;
   394     076F  30FF               	movlw	255
   395     0770  1683               	bsf	3,5	;RP0=1, select bank1
   396     0771  1303               	bcf	3,6	;RP1=0, select bank1
   397     0772  0088               	movwf	8	;volatile
   398     0773                     l608:
   399                           
   400                           ;MOTOR.c: 64:     PORTD = 0;
   401     0773  1283               	bcf	3,5	;RP0=0, select bank0
   402     0774  1303               	bcf	3,6	;RP1=0, select bank0
   403     0775  0188               	clrf	8	;volatile
   404     0776                     l30:
   405     0776  0008               	return
   406     0777                     __end_of_initPIC:
   407                           
   408                           	psect	text2
   409     0777                     __ptext2:	
   410 ;; *************** function _DCmotor *****************
   411 ;; Defined at:
   412 ;;		line 18 in file "MOTOR.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;  speed           2    0[COMMON] int 
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         2       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0
   429 ;;      Totals:         2       0       0       0       0
   430 ;;Total ram usage:        2 bytes
   431 ;; Hardware stack levels used: 1
   432 ;; This function calls:
   433 ;;		Nothing
   434 ;; This function is called by:
   435 ;;		_main
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439     0777                     _DCmotor:	
   440                           ;psect for function _DCmotor
   441                           
   442     0777                     l628:	
   443                           ;incstack = 0
   444                           ; Regs used in _DCmotor: [wreg+status,2+status,0]
   445                           
   446                           
   447                           ;MOTOR.c: 19:     if (speed == 1) {
   448     0777  0370               	decf	DCmotor@speed,w
   449     0778  0471               	iorwf	DCmotor@speed+1,w
   450     0779  1D03               	btfss	3,2
   451     077A  2F7C               	goto	u71
   452     077B  2F7D               	goto	u70
   453     077C                     u71:
   454     077C  2F8A               	goto	l632
   455     077D                     u70:
   456     077D                     l630:
   457                           
   458                           ;MOTOR.c: 24:         PR2 = 0b11001111;
   459     077D  30CF               	movlw	207
   460     077E  1683               	bsf	3,5	;RP0=1, select bank1
   461     077F  1303               	bcf	3,6	;RP1=0, select bank1
   462     0780  0092               	movwf	18	;volatile
   463                           
   464                           ;MOTOR.c: 25:         T2CON = 0b00000111;
   465     0781  3007               	movlw	7
   466     0782  1283               	bcf	3,5	;RP0=0, select bank0
   467     0783  1303               	bcf	3,6	;RP1=0, select bank0
   468     0784  0092               	movwf	18	;volatile
   469                           
   470                           ;MOTOR.c: 26:         CCPR1L = 0b01100111;
   471     0785  3067               	movlw	103
   472     0786  0095               	movwf	21	;volatile
   473                           
   474                           ;MOTOR.c: 27:         CCP1CON = 0b00111100;
   475     0787  303C               	movlw	60
   476     0788  0097               	movwf	23	;volatile
   477                           
   478                           ;MOTOR.c: 28:     }
   479     0789  2FB6               	goto	l27
   480     078A                     l632:
   481     078A  3002               	movlw	2
   482     078B  0670               	xorwf	DCmotor@speed,w
   483     078C  0471               	iorwf	DCmotor@speed+1,w
   484     078D  1D03               	btfss	3,2
   485     078E  2F90               	goto	u81
   486     078F  2F91               	goto	u80
   487     0790                     u81:
   488     0790  2F9E               	goto	l636
   489     0791                     u80:
   490     0791                     l634:
   491                           
   492                           ;MOTOR.c: 34:         PR2 = 0b01011000;
   493     0791  3058               	movlw	88
   494     0792  1683               	bsf	3,5	;RP0=1, select bank1
   495     0793  1303               	bcf	3,6	;RP1=0, select bank1
   496     0794  0092               	movwf	18	;volatile
   497                           
   498                           ;MOTOR.c: 35:         T2CON = 0b00000111;
   499     0795  3007               	movlw	7
   500     0796  1283               	bcf	3,5	;RP0=0, select bank0
   501     0797  1303               	bcf	3,6	;RP1=0, select bank0
   502     0798  0092               	movwf	18	;volatile
   503                           
   504                           ;MOTOR.c: 36:         CCPR1L = 0b00111110;
   505     0799  303E               	movlw	62
   506     079A  0095               	movwf	21	;volatile
   507                           
   508                           ;MOTOR.c: 37:         CCP1CON = 0b00011100;
   509     079B  301C               	movlw	28
   510     079C  0097               	movwf	23	;volatile
   511                           
   512                           ;MOTOR.c: 38:     }
   513     079D  2FB6               	goto	l27
   514     079E                     l636:
   515     079E  3003               	movlw	3
   516     079F  0670               	xorwf	DCmotor@speed,w
   517     07A0  0471               	iorwf	DCmotor@speed+1,w
   518     07A1  1D03               	btfss	3,2
   519     07A2  2FA4               	goto	u91
   520     07A3  2FA5               	goto	u90
   521     07A4                     u91:
   522     07A4  2FB2               	goto	l640
   523     07A5                     u90:
   524     07A5                     l638:
   525                           
   526                           ;MOTOR.c: 44:         PR2 = 0b11111001;
   527     07A5  30F9               	movlw	249
   528     07A6  1683               	bsf	3,5	;RP0=1, select bank1
   529     07A7  1303               	bcf	3,6	;RP1=0, select bank1
   530     07A8  0092               	movwf	18	;volatile
   531                           
   532                           ;MOTOR.c: 45:         T2CON = 0b00000101;
   533     07A9  3005               	movlw	5
   534     07AA  1283               	bcf	3,5	;RP0=0, select bank0
   535     07AB  1303               	bcf	3,6	;RP1=0, select bank0
   536     07AC  0092               	movwf	18	;volatile
   537                           
   538                           ;MOTOR.c: 46:         CCPR1L = 0b11111100;
   539     07AD  30FC               	movlw	252
   540     07AE  0095               	movwf	21	;volatile
   541                           
   542                           ;MOTOR.c: 47:         CCP1CON = 0b00111100;
   543     07AF  303C               	movlw	60
   544     07B0  0097               	movwf	23	;volatile
   545                           
   546                           ;MOTOR.c: 48:     }
   547     07B1  2FB6               	goto	l27
   548     07B2                     l640:
   549                           
   550                           ;MOTOR.c: 54:         CCPR1L = 0b00000000;
   551     07B2  1283               	bcf	3,5	;RP0=0, select bank0
   552     07B3  1303               	bcf	3,6	;RP1=0, select bank0
   553     07B4  0195               	clrf	21	;volatile
   554                           
   555                           ;MOTOR.c: 55:         CCP1CON = 0b00000000;
   556     07B5  0197               	clrf	23	;volatile
   557     07B6                     l27:
   558     07B6  0008               	return
   559     07B7                     __end_of_DCmotor:
   560     007E                     btemp	set	126	;btemp
   561     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DCmotor

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     370
                            _DCmotor
                            _initPIC
 ---------------------------------------------------------------------------------
 (1) _initPIC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DCmotor                                              2     0      2     370
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DCmotor
   _initPIC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       3      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Jun 14 14:45:01 2024

                     l30 0776                       l27 07B6                       u70 077D  
                     u71 077C                       u80 0791                       u81 0790  
                     u90 07A5                       u91 07A4                      l602 0769  
                    l604 0769                      l630 077D                      l606 076F  
                    l640 07B2                      l632 078A                      l608 0773  
                    l634 0791                      l650 07D0                      l642 07B7  
                    l636 079E                      l628 0777                      l652 07D6  
                    l644 07BC                      l638 07A5                      l654 07E0  
                    l646 07C0                      l656 07E6                      l648 07C6  
                    l658 07F0                      u100 07C6                      u101 07C5  
                    u110 07D6                      u111 07D5                      u120 07E6  
                    u121 07E5                      _PR2 0092          __end_of_DCmotor 07B7  
                   _main 07B7                     btemp 007E                     start 0000  
       nosup@@$_$_CONFIG 0000                    ?_main 0070                    _T2CON 0012  
                  _PORTC 0007                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088          __end_of_initPIC 0777                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0072                ??_DCmotor 0072                   _CCPR1L 0015  
                 _button 0072                ??_initPIC 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pnvCOMMON 0072               __pmaintext 07B7  
                _CCP1CON 0017                  _DCmotor 0777                  __ptext1 0769  
                __ptext2 0777                  _initPIC 0769     end_of_initialization 07FC  
    start_initialization 07FC             DCmotor@speed 0070                ___latbits 0002  
               ?_DCmotor 0070                 ?_initPIC 0070  
